# Default values file
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  # image.repository -- Repository for the custom-metrics image
  repository: quay.io/fairwinds/custom-metrics
  # image.tag -- The custom-metrics image tag to use
  tag: v0.6.0
  # image.pullPolicy -- imagePullPolicy - Highly recommended to leave this as `Always`
  pullPolicy: Always

nameOverride: ""
fullnameOverride: ""

controller:
  # controller.enabled -- Whether or not to install the controller deployment
  enabled: true
  istio:
    # controller.istio.enabled - Whether or not to use the istio metric monitor (also reduces permissions of RBAC)
    enabled: true
  rbac:
    # controller.rbac.create -- If set to true, rbac resources will be created for the controller
    create: true
  # controller.serviceAccount.create -- If true, a service account will be created for the controller. If set to false, you must set `controller.serviceAccount.name`
  serviceAccount:
    create: true
    name:

  datadogAnnotations:
    # controller.datadogAnnotations.enabled -- If set to true, the controller will add datadog annotations to the pods
    enabled: true
  # controller.logVerbosity -- The verbosity of the controller's logs
  logVerbosity: "2"
  # controller.env -- Map of environment var name and value to be set on the controller pods
  env: {}
  # controller.nodeSelector -- Node selector for the controller pod
  nodeSelector: {}
  # controller.tolerations -- Tolerations for the controller podons - List of tolerations to put on the deployment pods
  tolerations: []
  # controller.affinity -- Affinity for the controller pods
  affinity: {}
  # controller.resources -- The resources block for the controller pods
  resources:
    limits:
      cpu: 25m
      memory: 32Mi
    requests:
      cpu: 25m
      memory: 32Mi

  service:
    # controller.service.enabled -- If set to true, the controller will create a service for the controller
    enabled: true
    # controller.service.type -- The type of service to create.
    type: ClusterIP
    # controller.service.port -- The port to run the dashboard service on
    port: 10042
