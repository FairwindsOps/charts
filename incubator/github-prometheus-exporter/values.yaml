# repliaCount -- The number of replicas to run
replicaCount: 1

config:
  # config.githubToken -- A github token to be kept in environment
  githubToken: ""
  # config.repos -- Env REPOS. If supplied, The repos you wish to monitor, expected in the format "user/repo1, user/repo2". Can be across different Github users/orgs.
  repos: ""
  # config.users -- Env USERS. If supplied, the exporter will enumerate all repositories for that users. Expected in the format "user1, user2"
  users: ""
  # config.orgs -- Env ORGS. If supplied, the exporter will enumerate all repositories for that organization. Expected in the format "org1, org2".
  orgs: ""
  # config.apiURL -- Github API URL, shouldn't need to change this.
  apiURL: https://api.github.com
  # config.logLevel -- The level of logging the exporter will run with
  logLevel: debug

image:
  # image.repository -- Where to find the docker image
  repository: infinityworks/github-exporter
  # image.pullPolicy -- The image pull policy. Strongly recommend not changing this
  pullPolicy: Always
  # image.tag -- Overrides the image tag whose default is the chart appVersion
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # serviceAccount.create -- Specifies whether a service account should be created
  create: true
  # serviceAccount.annotations -- Annotations to add to the service account
  annotations: {}
  # serviceAccount.name -- The name of the service account to use. If not set and create is true, a name is generated using the fullname template
  name: ""

# podAnnotations -- A map of annotations to add to the pod
podAnnotations: {}

# podSecurityContext -- A pod security context to add
podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # service.type -- The type of service to expose
  type: ClusterIP
  # service.port -- The port that the service will listen on
  port: 9171

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
