# Default values for vertical-pod-autoscaler.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# imagePullSecrets -- A list of image pull secrets to be used for all pods
imagePullSecrets: []
# priorityClassName -- To set the priorityclass for all pods
priorityClassName: ""
# nameOverride -- A template override for the name
nameOverride: ""
# fullnameOverride -- A template override for the fullname
fullnameOverride: ""
rbac:
  # rbac.create -- If true, then rbac resources (clusterroles and clusterrolebindings) will be created for the selected components.
  create: true

serviceAccount:
  # serviceAccount.create -- Specifies whether a service account should be created for each component
  create: true
  # serviceAccount.annotations -- Annotations to add to the service accounts for each component
  annotations: {}
  # serviceAccount.name -- The base name of the service account to use (appended with the component). If not set and create is true, a name is generated using the fullname template and appended for each component
  name: ""
  # serviceAccount.automountServiceAccountToken -- Automount API credentials for the Service Account
  automountServiceAccountToken: true

recommender:
  # recommender.enabled -- If true, the vpa recommender component will be installed.
  enabled: true
  # recommender.extraArgs -- A set of key-value flags to be passed to the recommender
  extraArgs:
    v: "4"
    pod-recommendation-min-cpu-millicores: 15
    pod-recommendation-min-memory-mb: 100
  replicaCount: 1
  # recommender.podDisruptionBudget -- This is the setting for the pod disruption budget
  podDisruptionBudget: {}
    # maxUnavailable: 1
  image:
    # recommender.image.repository -- The location of the recommender image
    repository: k8s.gcr.io/autoscaling/vpa-recommender
    # recommender.image.pullPolicy -- The pull policy for the recommender image. Recommend not changing this
    pullPolicy: Always
    # recommender.image.tag -- Overrides the image tag whose default is the chart appVersion
    tag: ""
  # recommender.podAnnotations -- Annotations to add to the recommender pod
  podAnnotations: {}
  # recommender.podSecurityContetxt -- The security context for the recommender pod
  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 65534
  # recommender.securityContext -- The security context for the containers inside the recommender pod
  securityContext: {}
  # recommender.resources -- The resources block for the recommender pod
  resources:
    limits:
      cpu: 200m
      memory: 1000Mi
    requests:
      cpu: 50m
      memory: 500Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}

updater:
  # updater.enabled -- If true, the updater component will be deployed
  enabled: true
  # updater.extraArgs -- A key-value map of flags to pass to the updater
  extraArgs: {}
  replicaCount: 1
  # updater.podDisruptionBudget -- This is the setting for the pod disruption budget
  podDisruptionBudget: {}
    # maxUnavailable: 1
  image:
    # updater.image.repository -- The location of the updater image
    repository: k8s.gcr.io/autoscaling/vpa-updater
    # updater.image.pullPolicy -- The pull policy for the updater image. Recommend not changing this
    pullPolicy: Always
    # updater.image.tag -- Overrides the image tag whose default is the chart appVersion
    tag: ""
  # updater.podAnnotations -- Annotations to add to the updater pod
  podAnnotations: {}
  # updater.podSecurityContetxt -- The security context for the updater pod
  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 65534
  # updater.securityContext -- The security context for the containers inside the updater pod
  securityContext: {}
  # updater.resources -- The resources block for the updater pod
  resources:
    limits:
      cpu: 200m
      memory: 1000Mi
    requests:
      cpu: 50m
      memory: 500Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}

admissionController:
  # admissionController.enabled -- If true, will install the admission-controller component of vpa
  enabled: false
  # admissionController.generateCertificate -- If true and admissionController is enabled, a pre-install hook will run to create the certificate for the webhook
  generateCertificate: true
  certGen:
    image:
      # admissionController.certGen.image.repository -- An image that contains certgen for creating certificates. Only used if admissionController.generateCertificate is true
      repository: quay.io/reactiveops/ci-images
      # admissionController.certGen.image.tag -- An image tag for the admissionController.certGen.image.repository image. Only used if admissionController.generateCertificate is true
      tag: v11-alpine
      # admissionController.certGen.image.pullPolicy -- The pull policy for the certgen image. Recommend not changing this
      pullPolicy: Always
      # admissionController.certGen.env -- Additional environment variables to be added to the certgen container. Format is KEY: Value format
    env: {}
    # admissionController.certGen.resources -- The resources block for the certgen pod
    resources: {}
  # admissionController.cleanupOnDelete -- If true, a post-delete job will remove the mutatingwebhookconfiguration and the tls secret for the admission controller
  cleanupOnDelete: true
  replicaCount: 1
  # admissionController.podDisruptionBudget -- This is the setting for the pod disruption budget
  podDisruptionBudget: {}
    # maxUnavailable: 1
  image:
    # admissionController.image.repository -- The location of the vpa admission controller image
    repository: k8s.gcr.io/autoscaling/vpa-admission-controller
    # admissionController.image.pullPolicy -- The pull policy for the admission controller image. Recommend not changing this
    pullPolicy: Always
    # admissionController.image.tag -- Overrides the image tag whose default is the chart appVersion
    tag: ""
  # admissionController.podAnnotations -- Annotations to add to the admission controller pod
  podAnnotations: {}
  # admissionController.podSecurityContetxt -- The security context for the admission controller pod
  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 65534
  # admissionController.securityContext -- The security context for the containers inside the admission controller pod
  securityContext: {}
  # admissionController.resources -- The resources block for the admission controller pod
  resources:
    limits:
      cpu: 200m
      memory: 500Mi
    requests:
      cpu: 50m
      memory: 200Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}
