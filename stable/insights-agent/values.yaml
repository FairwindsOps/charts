insights:
  host: https://insights.fairwinds.com
  organization: ""
  cluster: ""
  base64token: ""
  tokenSecretName: ""

global:
  proxy:
    # global.proxy.http -- Annotations used to access the proxy servers(http).
    http:
    # global.proxy.https -- Annotations used to access the proxy servers(https).
    https:
    # global.proxy.ftp -- Annotations used to access the proxy servers(ftp).
    ftp:
    # global.proxy.no_proxy -- Annotations to provides a way to exclude traffic destined to certain hosts from using the proxy.
    no_proxy:

rbac:
  disabled: false

uploader:
  image:
    repository: quay.io/fairwinds/insights-uploader
    tag: "0.3"
  imagePullSecret: ""
  sendFailures: true
  resources:
    limits:
      cpu: 250m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  env:

cronjobs:
  disableServiceMesh: true
  backoffLimit: 1
  failedJobsHistoryLimit: 2
  successfulJobsHistoryLimit: 2
  nodeSelector: null
  runJobsImmediately: true
  # tolerations:
  # dnsPolicy:

cronjobExecutor:
  image:
    repository: curlimages/curl
    tag: "7.84.0"
  resources:
    requests:
      cpu: 100m
      memory: 128Mi

installReporter:
  image:
    repository: quay.io/fairwinds/insights-uploader
    tag: "0.3"
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
  additionalAnnotations: {}

polaris:
  enabled: false
  schedule: "rand * * * *"
  timeout: 300
  rbac:
    disabled: false
  image:
    repository: quay.io/fairwinds/polaris
    tag: "7.0"
  resources:
    requests:
      cpu: 100m
      memory: 128Mi

kube-hunter:
  enabled: false
  schedule: "rand * * * *"
  timeout: 300
  logLevel: INFO
  image:
    repository: aquasec/kube-hunter
    tag: "0.6.8"
  resources:
    requests:
      cpu: 100m
      memory: 128Mi

goldilocks:
  enabled: false
  vpa:
    enabled: true
    recommender:
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsUser: 65534
        capabilities:
          drop:
          - ALL
  schedule: "rand * * * *"
  timeout: 300
  image:
    repository: quay.io/fairwinds/goldilocks
    tag: "v2.2.0"
  controller:
    flags:
      on-by-default: true
      exclude-namespaces: "kube-system"
    resources:
      requests:
        cpu: 25m
        memory: 262Mi
      limits:
        cpu: 250m
        memory: 545Mi
  dashboard:
    enabled: false
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 250m
      memory: 512Mi

opa:
  enabled: false
  schedule: "rand * * * *"
  role: "view"
  timeout: 300
  image:
    repository: quay.io/fairwinds/fw-opa
    tag: "2.0"
  additionalAccess:
  # opa.defaultTargetResources -- A default list of Kubernetes targets to which OPA
  # policies will be applied.
  # Each target requires a list of apiGroups and a list of Resources.
  defaultTargetResources:
  - apiGroups:
    - apps
    resources:
    - daemonsets
    - deployments
    - statefulsets
  - apiGroups:
    - batch
    resources:
    - jobs
    - cronjobs
  - apiGroups:
    - ""
    resources:
    - pods
    - replicationcontrollers
  # opa.admissionRulesAsTargetResources -- If the admission controller is enabled,
  # the APIGroups and Resources found in insights-admission `webhookConfig.rules`
  # will be added as OPA Kubernetes target resources, plus
  # supporting RBAC rules are granted to OPA, if the insights-admission
  # `webhookConfig.rulesAutoRBAC` value is also set.
  admissionRulesAsTargetResources: true
  # opa.targetResources -- A user-specified list of Kubernetes targets to which
  # OPA policies will be applied.
  # Each target requires a list of apiGroups and a list of Resources.
  targetResources: []
  # opa.targetResourcesAutoRBAC -- Automatically add RBAC rules allowing get
  # and list operations for APIGroups and Resources supplied via `targetResources`.
  # This *does not* impact RBAC rules added for `defaultTargetResources`.
  targetResourcesAutoRBAC: true
  resources:
    requests:
      cpu: 100m
      memory: 128Mi

workloads:
  enabled: true
  schedule: "rand * * * *"
  timeout: 300
  image:
    repository: quay.io/fairwinds/workloads
    tag: "2.2"
  resources:
    requests:
      cpu: 100m
      memory: 128Mi

nova:
  enabled: false
  schedule: "rand * * * *"
  timeout: 300
  logLevel: 3
  image:
    repository: quay.io/fairwinds/nova
    tag: "v3.2"
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
  SkipVolumes: true
  configLocation: "/config/nova.yaml"
  config:
    context: ""
    desired-versions: {}
    include-all: true
    wide: true
    output-file: "/output/nova.json"

rbac-reporter:
  enabled: false
  schedule: "rand * * * *"
  timeout: 300
  image:
    repository: quay.io/fairwinds/rbac-reporter
    tag: "1.2"
  resources:
    requests:
      cpu: 100m
      memory: 128Mi

kube-bench:
  enabled: false
  schedule: "rand * * * *"
  mode: "cronjob"
  hourInterval: 2
  timeout: 600
  image:
    repository: quay.io/fairwinds/fw-kube-bench
    tag: 0.3
  aggregator:
    image:
      repository: quay.io/fairwinds/fw-kube-bench-aggregator
      tag: 0.2
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
  resources:
    requests:
      cpu: 100m
      memory: 128Mi

trivy:
  enabled: false
  namespaceBlacklist: []
  ignoreUnfixed: false
  schedule: "rand * * * *"
  privateImages:
    dockerConfigSecret: ""
  maxConcurrentScans: 1
  maxScansPerRun: 20
  timeout: 2400
  insecureSSL: false
  image:
    repository: quay.io/fairwinds/fw-trivy
    tag: "0.21"
  serviceAccount:
    annotations:
  resources:
    requests:
      cpu: 100m
      memory: 128Mi

pluto:
  enabled: false
  schedule: "rand * * * *"
  timeout: 300
  targetVersions: ""
  image:
    repository: us-docker.pkg.dev/fairwinds-ops/oss/pluto
    tag: "v5.10"
  resources:
    requests:
      cpu: 100m
      memory: 128Mi

prometheus-metrics:
  enabled: false
  installPrometheusServer: false
  schedule: "0/10 * * * *"
  timeout: 300
  address: "http://prometheus-server"
  image:
    repository: quay.io/fairwinds/prometheus-collector
    tag: "1.0"
  resources:
    requests:
      cpu: 100m
      memory: 128Mi

prometheus:
  kubeStateMetrics:
    enabled: true
  alertmanager:
    enabled: false
  nodeExporter:
    enabled: false
  pushgateway:
    enabled: false
  configmapReload:
    prometheus:
      enabled: false
  server:
    fullnameOverride: "prometheus-server"
    image:
      pullPolicy: Always
    persistentVolume:
      enabled: false
    retention: "1d"
    resources:
      limits:
        cpu: 500m
        memory: 3Gi
      requests:
        cpu: 250m
        memory: 2Gi
    containerSecurityContext:
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL
  kube-state-metrics:
    image:
      pullPolicy: Always
    resources:
      requests:
        cpu: 10m
        memory: 32Mi
    containerSecurityContext:
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL

admission:
  enabled: false

insights-admission:
  nameOverride: insights-agent
  insights:
    secret:
      create: false
      suffix: 'token'
    configmap:
      create: false
      suffix: 'configmap'
  serviceAccount:
    rbac:
      grantRole: "view"
  resources:
    limits:
      cpu: 1
      memory: 2Gi
    requests:
      cpu: 100m
      memory: 128Mi

# test -- Used for chart CI only - deploys a test deployment
test:
  enabled: false
  image:
    repository: "python"
    tag: "3.7-alpine"
    pullPolicy: "Always"
  containerSecurityContext:
    runAsUser: 1200
    allowPrivilegeEscalation: false
    privileged: false
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    capabilities:
      drop:
        - ALL

awscosts:
  enabled: false
  schedule: "rand * * * *"
  timeout: 300
  image:
    repository: quay.io/fairwinds/aws-costs
    tag: "1.0"
  serviceAccount:
    annotations:
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
  # awscosts.securityContext  -- Additional securityContext field in the Pod specification(PodSecurityContext) for the cronjob.
  securityContext: {}
  # awscosts.containerSecurityContext -- Additional container securityContext items for the cronJob.
  containerSecurityContext: {}

right-sizer:
  enabled: false
  schedule: "rand * * * *"
  timeout: 300
  # This image is for the controller, the agent only runs the Insights uploader.
  image:
    repository: quay.io/fairwinds/right-sizer
    tag: 0.3
    pullPolicy: Always
  # rightsizer.imagePullSecrets -- imagePullSecrets containing private registry credentials.
  imagePullSecrets: []

  # rightsizer.stateconfigmapname -- The name of a ConfigMap where controller
  # state is stored inbetween restarts.
  stateconfigmapname: insights-agent-right-sizer-controller-state
  # rightsizer.resetOOMsWindow -- The amount of time after which, if no OOMs
  # have been seen, items will be removed from the Insights report.
  resetOOMsWindow: "24h"
  # rightsizer.namespaces -- Kubernetes namespaces to restrict all operations.
  # By default, all namespaces are allowed.
  # This applies both to OOM-kill alerts, and updating memory limits if enabled.
  namespaces: []
  updateMemoryLimits:
    # rightsizer.updateMemoryLimits.enabled -- Update memory limits of
    # pod-controller resources whos containers are OOM-killed.
    enabled: false
    # rightsizer.updateMemoryLimits.increment -- The multiplier used to
    # increase memory limits, in response to an OOM-kill. This value is
    # multiplied by the limits of the OOM-killed container.
    increment: 1.2
    # rightsizer.updateMemoryLimits.minOOMs -- The number of OOM-kills required
    # before a pod-controller memory limits will be updated.
    minOOMs: 2
    # rightsizer.updateMemoryLimits.max -- The multiplier used to calculate a
    # maximum value to update a pod-controller memory limits.
    # This value is multiplied by the starting memory limits of the first
    # OOM-killed container seen by this controller.
    max: 2.0
    # rightsizer.updateMemoryLimits.namespaces -- Kubernetes namespaces to
    # restrict where memory limits will be updated.
    # This value narrows the namespaces specified in the global `rightsizer.namespaces` one.
    namespaces: []
  SkipVolumes: true
  # rightsizer.resources -- Resources for the controller deployment
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
  # rightsizer.deploymentAnnotations -- Annotations to add to the right-sizer controller deployment.
  deploymentAnnotations: {}
  # rightsizer.extraArgs -- Additional command-line flags for the controller.
  extraArgs: []
    # - "-v2"
  # rightsizer.containerSecurityContext -- The securityContext for the
  # controller container.
  containerSecurityContext:
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    runAsNonRoot: true
    runAsUser: 1200
    capabilities:
      drop:
        - ALL
  # The global `rbac.disabled` causes this ServiceAccount to not be created.
  # rightsizer.serviceAccountName -- The Kubernetes ServiceAccount for the
  # controller. This account will be created unless `rbac.disabled` is set to true.
  serviceAccountName: insights-agent-right-sizer-controller
  rbac:
    # See the global rbac.disabled value is used instead of `create` here.
    # rightsizer.rbac.additionalAccess -- RBAC rules to be granted to the
    # controller, providing access to custom resources.
    # Specify a list of RBAC rules,
    # each with a list of apiGroups, resources, and verbs.
    additionalAccess: []
      # - apiGroups:
      #     - ''
      #  resources:
     #     - 'ACustomResource'
      #  verbs:
      #    - 'get'
      #    - 'update'
      #    - 'patch'

falco:
  enabled: false
  installFalco: false
  statefulset: true
  persistence:
    enabled: true
    storageClass: ""
    accessModes:
      - ReadWriteOnce
    annotations: {}
    size: 1Gi
  schedule: "rand * * * *"
  timeout: 300
  service:
    port: 3031
  image:
    repository: quay.io/fairwinds/falco-agent
    tag: "0.1"
    pullPolicy: Always
  podSecurityContext:
    fsGroup: 101
    runAsUser: 1200
    runAsNonRoot: true
  containerSecurityContext:
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    runAsNonRoot: true
    runAsUser: 1200
    capabilities:
      drop:
        - ALL
  tolerations: []
  resources:
    limits:
      cpu: 250m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi

falcosecurity:
  fullnameOverride: insights-agent
  resources:
    requests:
      cpu: 100m
      memory: 512Mi
  falco:
    jsonOutput: true
  ebpf:
    # Enable eBPF support for Falco instead of falco-probe kernel module
    enabled: false
  falcosidekick:
    # enable falcosidekick deployment
    enabled: true
    fullfqdn: true
    webui:
      enabled: true
    config:
      webhook:
        address: "http://falco-agent:3031/data"
        customHeaders: ""  # a list of comma separated custom headers to add, syntax is "key:value\,key:value"
        minimumpriority: ""
        mutualtls: false
        checkcert: true
