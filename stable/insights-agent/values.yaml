insights:
  host: https://insights.fairwinds.com
  organization: ""
  cluster: ""
  base64token: ""
  tokenSecretName: ""

global:
  proxy:
    # global.proxy.http -- Annotations used to access the proxy servers(http).
    http:
    # global.proxy.https -- Annotations used to access the proxy servers(https).
    https:
    # global.proxy.ftp -- Annotations used to access the proxy servers(ftp).
    ftp:
    # global.proxy.no_proxy -- Annotations to provides a way to exclude traffic destined to certain hosts from using the proxy.
    no_proxy:

  # global.sslCertFileSecretName -- The name of an existing Secret containing an SSL certificate file to be used when communicating with a self-hosted Insights API.
  sslCertFileSecretName:
  # global.sslCertFileSecretKey -- The key, within global.sslCertFileSecretName, containing an SSL certificate file to be used when communicating with a self-hosted Insights API.
  sslCertFileSecretKey:

  # customWorkloadAnnotations -- Annotations to apply to all workloads. (excluding Falco, uses metadata)
  customWorkloadAnnotations: {}
rbac:
  disabled: false

uploader:
  image:
    repository: quay.io/fairwinds/insights-uploader
    tag: "0.5"
  imagePullSecret: ""
  sendFailures: true
  resources:
    limits:
      cpu: 250m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  env:

cronjobs:
  # -- If set, will override the cronjob apiVersion for all cronjobs
  apiVersion: ""
  disableServiceMesh: true
  backoffLimit: 1
  failedJobsHistoryLimit: 2
  successfulJobsHistoryLimit: 2
  nodeSelector: null
  runJobsImmediately: true
  # tolerations:
  # dnsPolicy:

cronjobExecutor:
  image:
    repository: quay.io/fairwinds/insights-utils
    tag: "0.0"
  resources:
    requests:
      cpu: 100m
      memory: 128Mi

installReporter:
  ttl: 300
  image:
    repository: quay.io/fairwinds/insights-uploader
    tag: "0.5"
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
  additionalAnnotations: {}
  securityContext:
    privileged: false
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 3000
    capabilities:
      drop:
      - ALL

polaris:
  enabled: false
  schedule: "rand * * * *"
  timeout: 300
  rbac:
    disabled: false
  image:
    repository: quay.io/fairwinds/polaris
    tag: "9.6"
  resources:
    requests:
      cpu: 100m
      memory: 128Mi

kube-hunter:
  enabled: false
  schedule: "rand * * * *"
  timeout: 300
  logLevel: INFO
  image:
    repository: aquasec/kube-hunter
    tag: "0.6.8"
  resources:
    requests:
      cpu: 100m
      memory: 128Mi

goldilocks:
  enabled: false
  vpa:
    enabled: true
    recommender:
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsUser: 65534
        capabilities:
          drop:
          - ALL
  schedule: "rand * * * *"
  timeout: 300
  image:
    repository: us-docker.pkg.dev/fairwinds-ops/oss/goldilocks
    tag: "v4.13"
  controller:
    flags:
      on-by-default: true
      exclude-namespaces: "kube-system"
    rbac:
      extraClusterRoleBindings:
        - view
    resources:
      requests:
        cpu: 25m
        memory: 262Mi
      limits:
        cpu: 250m
        memory: 545Mi
  dashboard:
    enabled: false
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 250m
      memory: 512Mi

opa:
  enabled: false
  schedule: "rand * * * *"
  role: "view"
  timeout: 300
  image:
    repository: quay.io/fairwinds/fw-opa
    tag: "2.5"
  additionalAccess:
  # opa.defaultTargetResources -- A default list of Kubernetes targets to which OPA
  # policies will be applied.
  # Each target requires a list of apiGroups and a list of Resources.
  defaultTargetResources:
  - apiGroups:
    - apps
    resources:
    - daemonsets
    - deployments
    - statefulsets
  - apiGroups:
    - batch
    resources:
    - jobs
    - cronjobs
  - apiGroups:
    - ""
    resources:
    - pods
    - replicationcontrollers
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
  # opa.admissionRulesAsTargetResources -- If the admission controller is enabled,
  # the APIGroups and Resources found in insights-admission `webhookConfig.rules`
  # will be added as OPA Kubernetes target resources, plus
  # supporting RBAC rules are granted to OPA, if the insights-admission
  # `webhookConfig.rulesAutoRBAC` value is also set.
  admissionRulesAsTargetResources: true
  # opa.targetResources -- A user-specified list of Kubernetes targets to which
  # OPA policies will be applied.
  # Each target requires a list of apiGroups and a list of Resources.
  targetResources: []
  # opa.targetResourcesAutoRBAC -- Automatically add RBAC rules allowing get
  # and list operations for APIGroups and Resources supplied via `targetResources`.
  # This *does not* impact RBAC rules added for `defaultTargetResources`.
  targetResourcesAutoRBAC: true
  resources:
    requests:
      cpu: 100m
      memory: 128Mi

workloads:
  enabled: true
  schedule: "rand * * * *"
  timeout: 300
  image:
    repository: quay.io/fairwinds/workloads
    tag: "2.6"
  resources:
    requests:
      cpu: 100m
      memory: 128Mi

nova:
  enabled: false
  schedule: "rand * * * *"
  timeout: 300
  logLevel: 3
  image:
    repository: quay.io/fairwinds/nova
    tag: "v3.11"
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
  SkipVolumes: true
  configLocation: "/config/nova.yaml"
  config:
    context: ""
    desired-versions: {}
    include-all: true
    wide: true
    output-file: "/output/nova.json"

rbac-reporter:
  enabled: false
  schedule: "rand * * * *"
  timeout: 300
  image:
    repository: quay.io/fairwinds/rbac-reporter
    tag: "1.3"
  resources:
    requests:
      cpu: 100m
      memory: 128Mi

kube-bench:
  enabled: false
  schedule: "rand * * * *"
  mode: "cronjob"
  hourInterval: 2
  timeout: 600
  SkipVolumes: true
  image:
    repository: quay.io/fairwinds/fw-kube-bench
    tag: 0.5
  aggregator:
    image:
      repository: quay.io/fairwinds/fw-kube-bench-aggregator
      tag: 0.3
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
  resources:
    requests:
      cpu: 100m
      memory: 128Mi

trivy:
  enabled: false
  namespaceBlacklist: []
  namespaceBlocklist: []
  namespaceAllowlist: []
  ignoreUnfixed: false
  schedule: "rand * * * *"
  privateImages:
    dockerConfigSecret: ""
  maxConcurrentScans: 1
  maxScansPerRun: 20
  timeout: 2400
  insecureSSL: false
  # trivy.env -- A map of environment variables that will be set for the trivy container.
  env:
    TRIVY_DB_REPOSITORY: ghcr.io/aquasecurity/trivy-db:2,public.ecr.aws/aquasecurity/trivy-db:2,docker.io/aquasec/trivy-db:2
    TRIVY_JAVA_DB_REPOSITORY: ghcr.io/aquasecurity/trivy-java-db:1,public.ecr.aws/aquasecurity/trivy-java-db:1,docker.io/aquasec/trivy-java-db:1
  image:
    repository: quay.io/fairwinds/fw-trivy
    tag: "0.31"
  serviceAccount:
    annotations:
  resources:
    requests:
      cpu: 100m
      memory: 1Gi

pluto:
  enabled: false
  schedule: "rand * * * *"
  timeout: 300
  targetVersions: ""
  image:
    repository: us-docker.pkg.dev/fairwinds-ops/oss/pluto
    tag: "v5.20"
  resources:
    requests:
      cpu: 100m
      memory: 128Mi

prometheus-metrics:
  enabled: false
  installPrometheusServer: false
  schedule: "0/10 * * * *"
  timeout: 300
  address: "http://prometheus-server"
  managedPrometheusClusterName: ""
  skipNonZeroMetricsCheck: false
  image:
    repository: quay.io/fairwinds/prometheus-collector
    tag: "1.5"
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
  serviceAccount:
    annotations:

prometheus:
  kubeStateMetrics:
    enabled: true
  alertmanager:
    enabled: false
  prometheus-node-exporter:
    enabled: false
  prometheus-pushgateway:
    enabled: false
  configmapReload:
    prometheus:
      enabled: false
  server:
    fullnameOverride: "prometheus-server"
    image:
      pullPolicy: Always
    persistentVolume:
      enabled: false
    retention: "1d"
    resources:
      limits:
        cpu: 500m
        memory: 3Gi
      requests:
        cpu: 250m
        memory: 2Gi
    containerSecurityContext:
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL
  kube-state-metrics:
    image:
      pullPolicy: Always
    resources:
      requests:
        cpu: 10m
        memory: 32Mi
    containerSecurityContext:
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL

admission:
  enabled: false

insights-admission:
  nameOverride: insights-agent
  insights:
    secret:
      create: false
      suffix: 'token'
    configmap:
      create: false
      suffix: 'configmap'
  serviceAccount:
    rbac:
      grantRole: "view"
  resources:
    limits:
      cpu: 1
      memory: 2Gi
    requests:
      cpu: 100m
      memory: 128Mi

# test -- Used for chart CI only - deploys a test deployment
test:
  enabled: false
  image:
    repository: "python"
    tag: "3.7-alpine"
    pullPolicy: "Always"
  containerSecurityContext:
    runAsUser: 1200
    allowPrivilegeEscalation: false
    privileged: false
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    capabilities:
      drop:
        - ALL

awscosts:
  enabled: false
  tagprefix: "resource_tags_user_"
  schedule: "rand * * * *"
  timeout: 300
  image:
    repository: quay.io/fairwinds/aws-costs
    tag: "1.4"
  serviceAccount:
    annotations:
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
  # awscosts.securityContext  -- Additional securityContext field in the Pod specification(PodSecurityContext) for the cronjob.
  securityContext: {}
  # awscosts.containerSecurityContext -- Additional container securityContext items for the cronJob.
  containerSecurityContext: {}
  mountTmp: true

cloudcosts:
  enabled: false
  secretName: cloudcosts
  tagkey: ""
  provider: aws  # aws or gcp
  aws:
    tagprefix: "resource_tags_user_"
  schedule: "rand * * * *"
  timeout: 300
  image:
    repository: quay.io/fairwinds/cloud-costs
    tag: "0.3"
  serviceAccount:
    annotations:
  resources:
    requests:
      cpu: 100m
      memory: 2Gi
  securityContext: {}
  containerSecurityContext: {}
  mountTmp: true

# requires a custom VPA configuration to work properly, see `right-sizer-vpa` section below in this values file
right-sizer:
  enabled: false
  enableClosedBeta: false
  image:
    repository: quay.io/fairwinds/insights-right-sizer
    tag: v0.0.2-dev
    # image.pullPolicy -- imagePullPolicy - Highly recommended to leave this as `Always`
    pullPolicy: Always
  config:
    default:
      vpa:
        minReplicas: 1
        updatePolicy:
          updateMode: "Off"
        resourcePolicy:
          containerPolicies:
            - containerName: "*"
              maxAllowed:
                cpu: 2
                memory: "4Gi"
  # imagePullSecrets -- A list of image pull secret names to use
  imagePullSecrets: []

  controller:
    # controller.revisionHistoryLimit -- Number of old replicasets to retain, default is 10, 0 will garbage-collect old replicasets
    revisionHistoryLimit: 10
    rbac:
      # controller.rbac.create -- If set to true, rbac resources will be created for the controller
      create: true
      # controller.rbac.enableArgoproj -- If set to true, the clusterrole will give access to argoproj.io resources
      enableArgoproj: true
      # controller.rbac.extraRules -- Extra rbac rules for the controller clusterrole
      extraRules: []
      # controller.rbac.extraClusterRoleBindings -- A list of ClusterRoles for which ClusterRoleBindings will be created for the ServiceAccount, if enabled
      extraClusterRoleBindings:
        - view
    serviceAccount:
      # controller.serviceAccount.create -- If true, a service account will be created for the controller. If set to false, you must set `controller.serviceAccount.name`
      create: true
      # controller.serviceAccount.name -- The name of an existing service account to use for the controller. Combined with `controller.serviceAccount.create`
      name:

    # controller.flags -- A map of additional flags to pass to the controller
    flags:
      on-by-default: true
    # controller.logVerbosity -- Controller log verbosity. Can be set from 1-10 with 10 being extremely verbose
    logVerbosity: "2"
    # controller.nodeSelector -- Node selector for the controller pod
    nodeSelector: {}
    # controller.tolerations -- Tolerations for the controller pod
    tolerations: []
    # controller.affinity -- Affinity for the controller pods
    affinity: {}
    # controller.topologySpreadConstraints -- Topology spread constraints for the controller pods
    topologySpreadConstraints: []
    # controller.resources -- The resources block for the controller pods
    resources:
      limits: {}
      requests:
        cpu: 25m
        memory: 256Mi
    # controller.podSecurityContext -- Defines the podSecurityContext for the controller pod
    podSecurityContext:
      seccompProfile:
        type: RuntimeDefault
    # controller.securityContext -- The container securityContext for the controller container
    securityContext:
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
      runAsNonRoot: true
      runAsUser: 10324
      capabilities:
        drop:
          - ALL
    deployment:
      # controller.deployment.extraVolumeMounts -- Extra volume mounts for the controller container
      extraVolumeMounts: []
      # controller.deployment.extraVolumes -- Extra volumes for the controller pod
      extraVolumes: []
      # controller.deployment.annotations -- Extra annotations for the controller deployment
      annotations: {}
      # controller.deployment.additionalLabels -- Extra labels for the controller deployment
      additionalLabels: {}

      # controller.deployment.podAnnotations -- Extra annotations for the controller pod
      podAnnotations: {}
  oom-detection:
    enabled: true
    schedule: "rand * * * *"
    timeout: 300
    # This image is for the controller, the agent only runs the Insights uploader.
    image:
      repository: quay.io/fairwinds/right-sizer
      tag: 0.5
      pullPolicy: Always

    # oom-detection.stateconfigmapname -- The name of a ConfigMap where controller
    # state is stored inbetween restarts.
    stateconfigmapname: insights-agent-right-sizer-oom-detection-controller-state
    # oom-detection.resetOOMsWindow -- The amount of time after which, if no OOMs
    # have been seen, items will be removed from the Insights report.
    resetOOMsWindow: "24h"
    # oom-detection.annotations -- Extra annotations for oom-detection
    annotations: {}
    # oom-detection.namespaces -- Kubernetes namespaces to restrict all operations.
    # By default, all namespaces are allowed.
    # This applies both to OOM-kill alerts, and updating memory limits if enabled.
    namespaces: []
    updateMemoryLimits:
      # oom-detection.updateMemoryLimits.enabled -- Update memory limits of
      # pod-controller resources whos containers are OOM-killed.
      enabled: false
      # oom-detection.updateMemoryLimits.increment -- The multiplier used to
      # increase memory limits, in response to an OOM-kill. This value is
      # multiplied by the limits of the OOM-killed container.
      increment: 1.2
      # oom-detection.updateMemoryLimits.minOOMs -- The number of OOM-kills required
      # before a pod-controller memory limits will be updated.
      minOOMs: 2
      # oom-detection.updateMemoryLimits.max -- The multiplier used to calculate a
      # maximum value to update a pod-controller memory limits.
      # This value is multiplied by the starting memory limits of the first
      # OOM-killed container seen by this controller.
      max: 2.0
      # oom-detection.updateMemoryLimits.namespaces -- Kubernetes namespaces to
      # restrict where memory limits will be updated.
      # This value narrows the namespaces specified in the global `oom-detection.namespaces` one.
      namespaces: []
    SkipVolumes: true
    # oom-detection.resources -- Resources for the controller deployment
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
    # oom-detection.extraArgs -- Additional command-line flags for the controller.
    extraArgs: []
      # - "-v2"
    # oom-detection.containerSecurityContext -- The securityContext for the
    # controller container.
    containerSecurityContext:
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
      runAsNonRoot: true
      runAsUser: 1200
      runAsGroup: 1200
      capabilities:
        drop:
          - ALL

# will only apply if `right-sizer.enabled`
right-sizer-vpa:
  admissionController:
    registerWebhook: true
    image:
      # custom Fairwinds vpa-admission-controller image
      repository: quay.io/fairwinds/vpa-admission-controller
      tag: master
    extraArgs:
      right-size-over-provisioned: true
      right-size-under-provisioned: false
  recommender:
    image:
      # custom Fairwinds vpa-recommender image
      repository: quay.io/fairwinds/vpa-recommender
      tag: master
    extraArgs:
      use-insights-recommender: 'true'
      recommender-interval: '1h'
      # these need to be set separately if using right-sizer, as 'vpa' is a subchart
      # insights-organization: ''
      # insights-cluster: ''
  metrics-server:
    # metrics-server.enabled -- If true, the metrics-server will be installed as a sub-chart
    enabled: false
    apiService:
      create: true
  updater:
    extraArgs:
      min-replicas: 1

falco:
  enabled: false
  installFalco: false
  statefulset: true
  persistence:
    enabled: true
    storageClass: ""
    accessModes:
      - ReadWriteOnce
    annotations: {}
    size: 1Gi
  schedule: "rand * * * *"
  timeout: 300
  service:
    port: 3031
  image:
    repository: quay.io/fairwinds/falco-agent
    tag: "0.3"
    pullPolicy: Always
  podSecurityContext:
    fsGroup: 101
    runAsUser: 1200
    runAsNonRoot: true
  containerSecurityContext:
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    runAsNonRoot: true
    runAsUser: 1200
    capabilities:
      drop:
        - ALL
  tolerations: []
  resources:
    limits:
      cpu: 250m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi

falcosecurity:
  fullnameOverride: insights-agent
  resources:
    requests:
      cpu: 100m
      memory: 512Mi
  falco:
    jsonOutput: true
  ebpf:
    # Enable eBPF support for Falco instead of falco-probe kernel module
    enabled: false
  falcosidekick:
    # enable falcosidekick deployment
    enabled: true
    fullfqdn: true
    webui:
      enabled: true
    config:
      webhook:
        address: "http://falco-agent:3031/data"
        customHeaders: ""  # a list of comma separated custom headers to add, syntax is "key:value\,key:value"
        minimumpriority: ""
        mutualtls: false
        checkcert: true

kyverno:
  enabled: false
  schedule: "rand * * * *"
  image:
    repository: quay.io/fairwinds/kyverno
    tag: "0.3"
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
  timeout: 300
  mountTmp: true
