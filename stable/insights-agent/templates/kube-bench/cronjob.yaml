{{- define "kubebench.job.spec" -}}
{{- $_ := set . "Label" "kube-bench" }}
{{- $_ := set . "Config" .Values.kubebench }}
restartPolicy: Never
serviceAccountName: {{ include "insights-agent.fullname" . }}
{{- if or (eq .Values.kubebench.deploymentMode "daemonsetMaster") (eq .Values.kubebench.deploymentMode "daemonset") }}
volumes:
- name: output
  emptyDir: {}
containers:
- name: kube-bench-aggregator
  image: "{{ .Values.kubebench.aggregator.image.repository }}:{{ .Values.kubebench.aggregator.image.tag }}"
  imagePullPolicy: Always
  env:
  - name: DAEMONSET_SERVICE
    value: {{ include "insights-agent.fullname" . }}-kube-bench-svc
  resources:
    {{- toYaml .Values.kubebench.aggregator.resources | nindent 4 }}
  volumeMounts:
  - name: output
    mountPath: /output
  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
      - ALL
    privileged: false
    readOnlyRootFilesystem: true
    runAsNonRoot: true
{{- else }}
hostPID: true
volumes:
- name: output
  emptyDir: {}
- name: tmp
  emptyDir: {}
- name: var-lib
  hostPath:
    path: "/var/lib"
    type: Directory
- name: etc-systemd
  hostPath:
    path: "/etc/systemd"
    type: Directory
- name: etc-kubernetes
  hostPath:
    path: "/etc/kubernetes"
    type: Directory
- name: usr-bin
  hostPath:
    path: "/usr/bin"
    type: Directory
containers:
- image: "{{ .Values.kubebench.image.repository }}:{{ .Values.kubebench.image.tag }}"
  imagePullPolicy: Always
  name: kube-bench
  env:
  - name: NODE_NAME
    valueFrom:
      fieldRef:
        fieldPath: spec.nodeName
  - name: RUN_ONCE
    value: "true"
  resources:
    {{- toYaml .Values.kubebench.resources | nindent 10 }}
  volumeMounts:
  - name: output
    mountPath: /output
  - name: tmp
    mountPath: /tmp
  - name: var-lib # for /var/lib/kubelet and /var/lib/etcd
    mountPath: /var/lib
    readOnly: true
  - name: etc-systemd
    mountPath: /etc/systemd
    readOnly: true
  - name: etc-kubernetes
    mountPath: /etc/kubernetes
    readOnly: true
    # /usr/local/mount-from-host/bin is mounted to access kubectl / kubelet, for auto-detecting the Kubernetes version.
    # You can omit this mount if you specify --version as part of the command.
  - name: usr-bin
    mountPath: /usr/local/mount-from-host/bin
    readOnly: true
  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
      - ALL
    privileged: false
    readOnlyRootFilesystem: true
{{- end }}
{{- include "uploaderContainer" . }}
{{- end -}}
{{- if .Values.kubebench.enabled -}}
{{- $_ := set . "Label" "kube-bench" }}
{{- $_ := set . "Config" .Values.kubebench }}
{{- $_ := set . "Template" "kubebench.job.spec" }}
{{- include "cronjob" . }}
{{- end -}}
