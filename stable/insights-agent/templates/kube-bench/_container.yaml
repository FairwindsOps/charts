{{- define "kubebench.container.spec" -}}
hostPID: true
{{- if eq (index .Values "kube-bench" "mode") "daemonsetMaster" }}
tolerations:
- key: node-role.kubernetes.io/master
  effect: NoSchedule
{{- end }}
volumes:
- name: output
  emptyDir: {}
- name: tmp
  emptyDir: {}
- name: var-lib
  hostPath:
    path: "/var/lib"
    type: Directory
- name: etc-systemd
  hostPath:
    path: "/etc/systemd"
    type: Directory
- name: etc-kubernetes
  hostPath:
    path: "/etc/kubernetes"
    type: Directory
- name: usr-bin
  hostPath:
    path: "/usr/bin"
    type: Directory
containers:
- image: "{{ (index .Values "kube-bench" "image" "repository") }}:{{ (index .Values "kube-bench" "image" "tag") }}"
  imagePullPolicy: Always
  name: kube-bench
  env:
  - name: NODE_NAME
    valueFrom:
      fieldRef:
        fieldPath: spec.nodeName
  {{- if eq (index .Values "kube-bench" "mode") "cronjob" }}
  - name: RUN_ONCE
    value: "true"
  {{- end }}
  - name: INTERVAL_HOURS
    value: {{ (index .Values "kube-bench" "hourInterval") | quote }}
  resources:
    {{- toYaml (index .Values "kube-bench" "resources") | nindent 4 }}
  volumeMounts:
  - name: output
    mountPath: /output
  - name: tmp
    mountPath: /tmp
  - name: var-lib # for /var/lib/kubelet and /var/lib/etcd
    mountPath: /var/lib
    readOnly: true
  - name: etc-systemd
    mountPath: /etc/systemd
    readOnly: true
  - name: etc-kubernetes
    mountPath: /etc/kubernetes
    readOnly: true
    # /usr/local/mount-from-host/bin is mounted to access kubectl / kubelet, for auto-detecting the Kubernetes version.
    # You can omit this mount if you specify --version as part of the command.
  - name: usr-bin
    mountPath: /usr/local/mount-from-host/bin
    readOnly: true
  securityContext:
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    privileged: false
    runAsNonRoot: false
    capabilities:
      drop:
        - ALL
{{- end -}}
