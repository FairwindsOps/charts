{{- if .Values.falco.enabled -}}
{{- $_ := set . "Label" "falco" }}
{{- $_ := set . "Config" .Values.falco }}
apiVersion: apps/v1
{{- if .Values.falco.statefulset }}
kind: StatefulSet
{{- else }}
kind: Deployment
{{- end }}
metadata:
  {{- include "metadata" . }}
spec:
  selector:
    matchLabels:
      app: falco-agent
{{- if .Values.falco.statefulset }}
  serviceName: falco-agent
{{- end }}
{{- if and .Values.falco.statefulset .Values.falco.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
        name: output-data
      {{- with .Values.falco.persistence.annotations }}
        annotations:
        {{- range $key, $value := . }}
          {{ $key }}: {{ $value }}
        {{- end }}
      {{- end }}
    spec:
      accessModes:
      {{- range .Values.falco.persistence.accessModes }}
        - {{ . | quote }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.falco.persistence.size | quote }}
    {{- if .Values.falco.persistence.storageClass }}
      storageClassName: {{ .Values.falco.persistence.storageClass }}
    {{- end -}}
{{- end }}
  template:
    metadata:
      labels:
        app: falco-agent
    {{- if .Values.falco.podAnnotations }}
      annotations:
        {{ toYaml .Values.falco.podAnnotations | indent 8 }}
    {{- end }}
    spec:
      serviceAccountName: {{ include "insights-agent.fullname" . }}-{{ .Label }}
      securityContext:
        {{- toYaml .Values.falco.podSecurityContext | nindent 8 }}
    {{- if .Values.falco.priorityClassName }}
      priorityClassName: {{ .Values.falco.priorityClassName }}
    {{- end }}
      containers:
      - name: falco-agent
        volumeMounts:
        - name: output-data
          mountPath: /output
      {{- if .Values.falco.securityContext }}
        securityContext:
          {{- toYaml .Values.falco.securityContext | nindent 12 }}
      {{- end }}
        imagePullPolicy: {{ .Values.falco.image.pullPolicy }}
        image: "{{ .Values.falco.image.repository }}:{{ .Values.falco.image.tag }}"
        ports:
        - containerPort: {{ .Values.falco.service.port | default 3031 }}
        readinessProbe:
          httpGet:
            path: /health
            port: {{ .Values.falco.service.port | default 3031 }}
          initialDelaySeconds: 15
          periodSeconds: 14
        livenessProbe:
          httpGet:
            path: /health
            port: {{ .Values.falco.service.port | default 3031 }}
          initialDelaySeconds: 15
          periodSeconds: 15
        resources:
        {{- toYaml .Values.falco.resources | nindent 10 }}
    {{- with .Values.falco.affinity }}
      affinity:
        {{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.falco.nodeSelector }}
      nodeSelector:
        {{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.falco.tolerationss }}
      tolerations:
        {{ toYaml . | indent 8 }}
    {{- end }}
    {{- if not .Values.falco.persistence.enabled }}
      volumes:
        - name: output-data
          emptyDir: {}
    {{- end }}
{{- end -}}