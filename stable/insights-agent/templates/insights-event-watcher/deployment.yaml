{{- if (index .Values "insights-event-watcher" "enabled") }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "insights-agent.fullname" . }}-insights-event-watcher
  labels:
    app: insights-agent
    component: insights-event-watcher
spec:
  replicas: 1
  selector:
    matchLabels:
      app: insights-agent
      component: insights-event-watcher
  template:
    metadata:
      labels:
        app: insights-agent
        component: insights-event-watcher
      {{- with (index .Values "insights-event-watcher" "annotations") }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ include "insights-agent.fullname" . }}-insights-event-watcher
      securityContext:
        {{- toYaml (index .Values "insights-event-watcher" "podSecurityContext") | nindent 8 }}
      containers:
      - name: insights-event-watcher
        image: "{{ (index .Values "insights-event-watcher" "image" "repository") }}:{{ (index .Values "insights-event-watcher" "image" "tag") }}"
        imagePullPolicy: {{ (index .Values "insights-event-watcher" "image" "pullPolicy") }}
        command: ["insights-event-watcher"]
        args:
        - --log-level={{ (index .Values "insights-event-watcher" "logLevel") }}
        {{- if .Values.insights.host }}
        - --insights-host
        - $(HOST)
        {{- end }}
        - --organization
        - $(ORGANIZATION)
        - --cluster
        - $(CLUSTER)
        - --insights-token 
        - $(FAIRWINDS_TOKEN)
        {{- if (index .Values "insights-event-watcher" "vapInterceptor" "enabled") }}
        - "--enable-vap-interceptor=true"
        - "--vap-interceptor-port=8080"
        {{- end }}
        {{- if .Values.insights.host }}
        - "--insights-host={{ .Values.insights.host }}"
        {{- end }}
        - "--organization={{ required "You must set an organization" .Values.insights.organization }}"
        - "--cluster={{ required "You must set a cluster" .Values.insights.cluster }}"
        - "--insights-token={{ .Values.insights.token | default "your-token" }}"
        ports:
        - containerPort: 8080
          name: webhook
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        {{ include "proxy-env-spec" . | indent 8 | trim }}
        {{- if (index .Values "insights" "host") }}
        - name: HOST
          value: {{ .Values.insights.host | quote }}
        {{- end }}
        - name: ORGANIZATION
          value: {{ required "You must set an organization" .Values.insights.organization | quote }}
        - name: CLUSTER
          value: {{ required "You must set a cluster" .Values.insights.cluster | quote }}
        - name: FAIRWINDS_TOKEN
          valueFrom:
            secretKeyRef:
              {{ if .Values.insights.tokenSecretName -}}
              name: {{ .Values.insights.tokenSecretName }}
              {{ else -}}
              name: {{ include "insights-agent.fullname" . }}-token
              {{ end -}}
              key: token
          {{- range $key, $value := (index .Values "insights-event-watcher" "env") }}
          - name: {{ $key }}
            value: {{ $value | quote }}
          {{- end }}
        securityContext:
          {{- toYaml (index .Values "insights-event-watcher" "containerSecurityContext") | nindent 10 }}
        volumeMounts:
        - name: output-volume
          mountPath: /output
        {{- if (index .Values "insights-event-watcher" "vapInterceptor" "enabled") }}
        - name: webhook-certs
          mountPath: /certs
          readOnly: true
        {{- end }}
        {{- with (index .Values "insights-event-watcher" "extraVolumeMounts") }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        resources:
          {{- toYaml (index .Values "insights-event-watcher" "resources") | nindent 10 }}
        {{- if (index .Values "insights-event-watcher" "vapInterceptor" "enabled") }}
        ports:
        - containerPort: 8080
          name: webhook
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTPS
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 5
        {{- end }}
      volumes:
      - name: output-volume
        emptyDir: {}
      {{- if (index .Values "insights-event-watcher" "vapInterceptor" "enabled") }}
      - name: webhook-certs
        secret:
          secretName: {{ include "insights-agent.fullname" . }}-insights-event-watcher-webhook-certs
      {{- end }}
      {{- with (index .Values "insights-event-watcher" "extraVolumes") }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- with (index .Values "insights-event-watcher" "nodeSelector") }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with (index .Values "insights-event-watcher" "affinity") }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with (index .Values "insights-event-watcher" "tolerations") }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
