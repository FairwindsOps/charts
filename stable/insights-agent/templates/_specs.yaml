{{ define "cronjob-spec" }}
schedule: {{ regexReplaceAll "^rand" .Config.schedule (regexReplaceAll "^[0,6-9]" (randNumeric 2) "") | quote }}
concurrencyPolicy: Forbid
failedJobsHistoryLimit: {{ .Values.cronjobs.failedJobsHistoryLimit }}
successfulJobsHistoryLimit: {{ .Values.cronjobs.successfulJobsHistoryLimit }}
{{- end }}

{{ define "job-spec" }}
{{- with .Values.cronjobs.dnsPolicy }}
dnsPolicy: {{ . }}
{{- end }}
backoffLimit: {{ .Values.cronjobs.backoffLimit }}
activeDeadlineSeconds: {{ mul .Config.timeout .Values.cronjobs.backoffLimit }}
{{- end }}

{{ define "job-template-spec" }}
restartPolicy: Never
serviceAccountName: {{ include "insights-agent.fullname" . }}-{{ .Label }}
{{- with .Values.cronjobs.nodeSelector }}
nodeSelector:
  {{- toYaml . | nindent 2 }}
{{- end }}
{{- with .Values.cronjobs.tolerations }}
tolerations:
  {{- toYaml . | nindent 2 }}
{{- end }}
{{- if not .Config.SkipVolumes }}
volumes:
- name: output
  emptyDir: {}
{{- end }}
{{- end }}

{{ define "container-spec" }}
name: {{ .Label }}
image: "{{ .Config.image.repository }}:{{ .Config.image.tag }}"
imagePullPolicy: Always
resources:
  {{- toYaml .Config.resources | nindent 2 }}
volumeMounts:
- name: output
  mountPath: /output
{{- end }}

{{ define "get-config-container" }}
initContainers:
- name: insights-config-downloader
  image: "{{ .Values.uploader.image.repository }}:{{ .Values.uploader.image.tag }}"
  imagePullPolicy: Always
  command:
  - ./download.sh
  - --datatype
  - {{ .Label }}
  - --organization
  - {{ required "You must set an organization" .Values.insights.organization | quote }}
  - --cluster
  - {{ required "You must set a cluster" .Values.insights.cluster | quote }}
  {{- with .Values.insights.host }}
  - --host
  - {{ . | quote }}
  {{- end }}
  - --file
  - /output/{{ .Label }}-config.yaml
  env:
  - name: FAIRWINDS_TOKEN
    valueFrom:
      secretKeyRef:
        {{ if .Values.insights.tokenSecretName -}}
        name: {{ .Values.insights.tokenSecretName }}
        {{ else -}}
        name: {{ include "insights-agent.fullname" . }}-token
        {{ end -}}
        key: token
  {{- with .Values.uploader.env }}
  {{- toYaml . | nindent 2 }}
  {{- end }}
  volumeMounts:
  - name: output
    mountPath: /output
  resources:
    {{- toYaml .Values.uploader.resources | nindent 4 }}
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    privileged: false
    capabilities:
      drop:
        - ALL
{{- end }}

{{ define "security-context" }}
securityContext:
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  privileged: false
  runAsNonRoot: true
  runAsUser: 10324
  capabilities:
    drop:
      - ALL
{{- end }}
