apiVersion: batch/v1
kind: Job
metadata:
  name: migrate-database
  annotations:
    "helm.sh/hook-delete-policy": "before-hook-creation"
  {{- if not (or .Values.global.postgresql.ephemeral .Values.global.postgresql.postMigrate) }}
    "helm.sh/hook": "pre-install,pre-upgrade"
  {{- else }}
    "helm.sh/hook": "post-install,post-upgrade"
  {{- end }}
  labels:
    {{- include "fairwinds-insights.labels" . | nindent 4 }}
    app.kubernetes.io/component: migrate-db
spec:
  backoffLimit: 5
  template:
    spec:
      restartPolicy: Never
      {{- with .Values.global.image.pullSecret }}
      imagePullSecrets:
        - name: {{ . }}
      {{- end }}
      containers:
      - name: fwinsights-db-migration
        image: "{{ .Values.global.migrationImage.repository }}:{{ include "fairwinds-insights.migrationImageTag" . }}"
        imagePullPolicy: Always
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        {{- include "fairwinds-insights.env" . | indent 8 }}
        {{- with .Values.global.options.adminEmail }}
        - name: SETUP_ADMIN_EMAIL
          value: {{ . }}
        {{- end }}
        {{- with .Values.global.options.organizationName }}
        - name: ADD_SELF_HOSTED
          value: "true"
        - name: SETUP_ORG_NAME
          value: {{ . }}
        {{- end }}
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          privileged: false
          runAsNonRoot: false
          runAsUser: {{ .Values.securityContext.runAsUser }}
          capabilities:
            drop:
              - ALL
        volumeMounts:
        - name: polaris-config
          mountPath: /tmp/
      volumes:
      - name: polaris-config
        configMap:
          name: polaris-config
          optional: true
          items:
          - key: polaris-config.json
            path: polaris-config.json
