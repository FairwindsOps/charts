apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fairwinds-insights.fullname" . }}-api
  labels:
    {{- include "fairwinds-insights.labels" . | nindent 4 }}
    app.kubernetes.io/component: api
    {{- if .Values.deployments.additionalLabels }}
    {{ toYaml .Values.deployments.additionalLabels | nindent 4 }}
    {{- end }}
spec:
  selector:
    matchLabels:
      {{- include "fairwinds-insights.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: api
  template:
    metadata:
      labels:
        {{- include "fairwinds-insights.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: api
        {{- if .Values.deployments.additionalPodLabels }}
        {{ toYaml .Values.deployments.additionalPodLabels | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.image.pullSecret }}
      imagePullSecrets:
        - name: {{ . }}
      {{- end }}
      serviceAccountName: {{ include "fairwinds-insights.fullname" . }}-insights
      containers:
        - name: fairwinds-insights
          image: "{{ .Values.apiImage.repository }}:{{ include "fairwinds-insights.apiImageTag" . }}"
          imagePullPolicy: Always
          command: ["api"]
          args:
          - "--port={{ .Values.api.port }}"
          ports:
          - name: http
            containerPort: {{ .Values.api.port }}
            protocol: TCP
          {{- include "env" (dict "root" .) | indent 10 }}
          livenessProbe:
            httpGet:
              path: /livez
              port: http
            timeoutSeconds: 5
            periodSeconds: 5
            failureThreshold: 12
          readinessProbe:
            httpGet:
              path: /readyz
              port: http
            timeoutSeconds: 5
            periodSeconds: 5
            failureThreshold: 6
          volumeMounts:
          - name: tmp
            mountPath: /tmp
          - name: go-build-cache
            mountPath: /tmp/go-build-cache
          - name: go-mod-cache
            mountPath: /tmp/go-mod-cache
          - name: secrets
            mountPath: /var/run/secrets/github
          {{- if .Values.selfHostedSecret }}
          - name: self-hosted-secret
            mountPath: /var/run/secrets/self-hosted
          {{- end }}
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            privileged: false
            runAsNonRoot: true
            runAsUser: {{ .Values.api.securityContext.runAsUser }}
            capabilities:
              drop:
                - ALL
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: tmp
        emptyDir: {}
      - name: go-build-cache
        emptyDir: {}
      - name: go-mod-cache
        emptyDir: {}
      - name: secrets
        secret:
          secretName: github-secrets
          optional: true
      {{- with .Values.selfHostedSecret }}
      - name: self-hosted-secret
        secret:
          secretName: {{ . }}
      {{- end }}
    {{- with .Values.api.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.api.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
    {{- end }}
