{{- if .Values.postgresql.ephemeral }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "fairwinds-insights.fullname" . }}-wait-for-cnpg
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "fairwinds-insights.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": "post-install,post-upgrade"
    "helm.sh/hook-weight": "20"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "fairwinds-insights.fullname" . }}-wait-for-cnpg
  labels:
    {{- include "fairwinds-insights.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": "post-install,post-upgrade"
    "helm.sh/hook-weight": "21"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
rules:
- apiGroups: [""]
  resources: ["pods", "services"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["get", "list"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "fairwinds-insights.fullname" . }}-wait-for-cnpg
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "fairwinds-insights.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": "post-install,post-upgrade"
    "helm.sh/hook-weight": "22"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "fairwinds-insights.fullname" . }}-wait-for-cnpg
subjects:
- kind: ServiceAccount
  name: {{ include "fairwinds-insights.fullname" . }}-wait-for-cnpg
  namespace: {{ .Release.Namespace }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-wait-for-cnpg-webhook
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "fairwinds-insights.labels" . | nindent 4 }}
spec:
  activeDeadlineSeconds: 300
  template:
    metadata:
      labels:
        {{- include "fairwinds-insights.labels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "fairwinds-insights.fullname" . }}-wait-for-cnpg
      restartPolicy: Never
      containers:
      - name: wait-for-webhook
        image: bitnami/kubectl:latest
        command:
        - /bin/bash
        - -c
        - |
          set -e
          echo "=== CloudNativePG Installation Debug ==="
          echo "Namespace: {{ .Release.Namespace }}"
          echo "Release: {{ .Release.Name }}"
          
          # List all pods in the namespace
          echo "=== All pods in namespace ==="
          kubectl get pods -n {{ .Release.Namespace }}
          
          # List all services in the namespace
          echo "=== All services in namespace ==="
          kubectl get services -n {{ .Release.Namespace }}
          
          # List all CRDs related to CloudNativePG
          echo "=== CloudNativePG CRDs ==="
          kubectl get crd | grep postgresql.cnpg.io || echo "No CloudNativePG CRDs found"
          
          # Check if CloudNativePG operator is installed
          echo "=== Checking CloudNativePG operator installation ==="
          kubectl get deployment -n {{ .Release.Namespace }} | grep cloudnative-pg || echo "No CloudNativePG deployment found"
          
          # Wait for CloudNativePG CRDs to be available
          echo "=== Waiting for CloudNativePG CRDs ==="
          kubectl wait --for=condition=established --timeout=300s crd/clusters.postgresql.cnpg.io || echo "CRD not found"
          
          # Wait for the CloudNativePG operator pods to be ready
          echo "=== Waiting for CloudNativePG operator pods ==="
          kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=cloudnative-pg -n {{ .Release.Namespace }} --timeout=300s || \
          kubectl wait --for=condition=ready pod -l app=cloudnative-pg -n {{ .Release.Namespace }} --timeout=300s || \
          kubectl wait --for=condition=ready pod -l app.kubernetes.io/component=operator -n {{ .Release.Namespace }} --timeout=300s || \
          echo "No CloudNativePG operator pods found"
          
          # Check if webhook service exists (don't wait for it to be ready)
          echo "=== Checking CloudNativePG webhook service ==="
          kubectl get service cnpg-webhook-service -n {{ .Release.Namespace }} || \
          kubectl get service cloudnative-pg-webhook-service -n {{ .Release.Namespace }} || \
          echo "Webhook service not found, but continuing..."
          
          # Test that we can access the CRD
          echo "=== Testing CloudNativePG CRD access ==="
          kubectl get crd clusters.postgresql.cnpg.io || echo "CRD access failed, but continuing..."
          
          echo "=== CloudNativePG installation check completed! ==="
{{- end }}
