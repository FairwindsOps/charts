{{- if .Values.postgresql.ephemeral }}
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: insights-postgres
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "fairwinds-insights.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-weight": "30"
    "helm.sh/hook-delete-policy": "before-hook-creation"
spec:
  instances: 1
  enableSuperuserAccess: true
  imageName: {{ .Values.postgresql.image.registry }}/{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}
  postgresql:
    parameters:
      max_connections: "100"
      shared_buffers: "256MB"
      effective_cache_size: "1GB"
      maintenance_work_mem: "64MB"
      checkpoint_completion_target: "0.9"
      wal_buffers: "16MB"
      default_statistics_target: "100"
      random_page_cost: "1.1"
      effective_io_concurrency: "200"
      work_mem: "4MB"
      min_wal_size: "1GB"
      max_wal_size: "4GB"
      max_worker_processes: "8"
      max_parallel_workers_per_gather: "2"
      max_parallel_workers: "8"
      max_parallel_maintenance_workers: "2"
      password_encryption: "scram-sha-256"
  bootstrap:
    initdb:
      database: {{ .Values.postgresql.auth.database }}
      owner: {{ .Values.postgresql.auth.username }}
      secret:
        name: {{ .Values.postgresql.auth.existingSecret }}
  superuserSecret:
    name: {{ .Values.postgresql.auth.existingSecret }}
  storage:
    size: {{ .Values.postgresql.storage.size }}
    storageClass: {{ .Values.postgresql.storage.storageClass }}
{{- end }}
