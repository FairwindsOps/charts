{{- if and .Values.postgresql.ephemeral .Values.postgresql.operator.install }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-cleanup-existing-crds
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "fairwinds-insights.labels" . | nindent 4 }}
  annotations:
    "meta.helm.sh/release-name": {{ .Release.Name | quote }}
    "meta.helm.sh/release-namespace": {{ .Release.Namespace | quote }}
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-weight": "10"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
spec:
  template:
    spec:
      serviceAccountName: {{ include "fairwinds-insights.fullname" . }}-crd-cleanup
      restartPolicy: Never
      containers:
      - name: cleanup-crds
        image: "{{ .Values.cronjobExecutor.image.repository }}:{{ .Values.cronjobExecutor.image.tag }}"
        command: ["sh"]
        args:
          - -c
          - |
            set -e
            echo "=== Cleaning up existing CloudNativePG resources that might conflict ==="
            echo "Namespace: {{ .Release.Namespace }}"
            echo "Release: {{ .Release.Name }}"
            
            # Check and list existing CloudNativePG resources
            echo "Checking for existing CloudNativePG resources..."
            
            # List and delete specific webhook configurations that conflict
            if kubectl get MutatingWebhookConfiguration cnpg-mutating-webhook-configuration 2>/dev/null; then
                echo "Found existing cnpg-mutating-webhook-configuration, deleting..."
                kubectl delete MutatingWebhookConfiguration cnpg-mutating-webhook-configuration --ignore-not-found=true
            else
                echo "No existing cnpg-mutating-webhook-configuration found"
            fi
            
            if kubectl get ValidatingWebhookConfiguration cnpg-validating-webhook-configuration 2>/dev/null; then
                echo "Found existing cnpg-validating-webhook-configuration, deleting..."
                kubectl delete ValidatingWebhookConfiguration cnpg-validating-webhook-configuration --ignore-not-found=true
            else
                echo "No existing cnpg-validating-webhook-configuration found"
            fi
            
            # List existing CloudNativePG CRDs
            echo "Checking for existing CloudNativePG CRDs..."
            for crd in clusters.postgresql.cnpg.io backups.postgresql.cnpg.io scheduledbackups.postgresql.cnpg.io poolers.postgresql.cnpg.io clusterimagecatalogs.postgresql.cnpg.io imagecatalogs.postgresql.cnpg.io; do
                if kubectl get crd $crd 2>/dev/null; then
                    echo "Found existing CRD: $crd"
                    # Check if there are any resources using this CRD
                    if kubectl get $crd --all-namespaces 2>/dev/null | grep -v "No resources found" > /dev/null; then
                        echo "WARNING: CRD $crd has existing resources. Listing them:"
                        kubectl get $crd --all-namespaces
                        echo "Skipping deletion of CRD $crd to avoid data loss"
                    else
                        echo "CRD $crd has no resources, deleting..."
                        kubectl delete crd $crd --ignore-not-found=true
                    fi
                else
                    echo "No existing CRD: $crd"
                fi
            done
            
            echo "=== CloudNativePG cleanup completed successfully ==="
        securityContext:
          runAsUser: 1000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          privileged: false
          runAsNonRoot: true
          capabilities:
            drop:
              - ALL
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "fairwinds-insights.fullname" . }}-crd-cleanup
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "fairwinds-insights.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "fairwinds-insights.fullname" . }}-crd-cleanup
  labels:
    {{- include "fairwinds-insights.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-weight": "6"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
rules:
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["get", "list", "delete"]
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["mutatingwebhookconfigurations", "validatingwebhookconfigurations"]
  verbs: ["get", "list", "delete"]
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "list"]
- apiGroups: ["postgresql.cnpg.io"]
  resources: ["clusters", "backups", "scheduledbackups", "poolers", "clusterimagecatalogs", "imagecatalogs"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "fairwinds-insights.fullname" . }}-crd-cleanup
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "fairwinds-insights.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-weight": "7"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "fairwinds-insights.fullname" . }}-crd-cleanup
subjects:
- kind: ServiceAccount
  name: {{ include "fairwinds-insights.fullname" . }}-crd-cleanup
  namespace: {{ .Release.Namespace }}
{{- end }}
