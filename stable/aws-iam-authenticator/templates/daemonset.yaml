---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: {{ template "aws-iam-authenticator.fullname" . }}
  labels:
    k8s-app: {{ template "aws-iam-authenticator.name" . }}
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
spec:
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        k8s-app: {{ template "aws-iam-authenticator.name" . }}
    spec:
      # run on the host network (don't depend on CNI)
      hostNetwork: true

      # run on each master node
      nodeSelector:
        node-role.kubernetes.io/master: ""
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - key: CriticalAddonsOnly
        operator: Exists

      # run `aws-iam-authenticator server` with three volumes
      # - config (mounted from the ConfigMap at /etc/aws-iam-authenticator/config.yaml)
      # - state (persisted TLS certificate and keys, mounted from the host)
      # - output (output kubeconfig to plug into your apiserver configuration, mounted from the host)
      containers:
      - name: aws-iam-authenticator
        image: gcr.io/heptio-images/authenticator:v0.3.0
        args:
        - server
        - --config={{ .Values.volumes.config.mountPath }}config.yaml
        - --state-dir={{ .Values.volumes.state.mountPath }}
        - --generate-kubeconfig={{ .Values.volumes.output.mountPath }}kubeconfig.yaml
        - --kubeconfig-pregenerated=true

        resources:
          requests:
            memory: 20Mi
            cpu: 10m
          limits:
            memory: 20Mi
            cpu: 100m

        volumeMounts:
        - name: config
          mountPath: {{ .Values.volumes.config.mountPath }}
        - name: state
          mountPath: {{ .Values.volumes.state.mountPath }}
        - name: output
          mountPath: {{ .Values.volumes.output.mountPath }}

      volumes:
      - name: config
        configMap:
          name: {{ template "aws-iam-authenticator.fullname" . }}
      - name: output
        hostPath:
          path: {{ .Values.volumes.output.hostPath }}
      - name: state
        hostPath:
          path: {{ .Values.volumes.state.hostPath }}
