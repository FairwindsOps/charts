version: 2.1

orbs:
  rok8s: fairwinds/rok8s-scripts@12

references:
  setup_environment: &setup_environment
    run:
      name: Setup Environment
      command: |
        echo 'export CI_SHA1=$CIRCLE_SHA1' >> ${BASH_ENV}
        echo 'Install AWS CLI'
        pip install awscli
        echo 'Install needed packages'
        apk --update add bash jq curl yq

  check_changelog: &check_changelog
    run:
      name: Check CHANGELOG
      command: |
        require_changelog=( insights-agent fairwinds-insights insights-admission )
        for chart in "${require_changelog[@]}"; do
          version=$(yq eval '.version' ./stable/$chart/Chart.yaml )
          echo "Checking if CHANGELOG.md is updated for $chart"
          grep "## $version" ./stable/$chart/CHANGELOG.md
        done

  install_vault_alpine: &install_vault_alpine
    run:
      name: install hashicorp vault
      command: |
        apk --update add curl yq
        cd /tmp
        curl -LO https://releases.hashicorp.com/vault/1.13.2/vault_1.13.2_linux_amd64.zip
        sha256sum vault_1.13.2_linux_amd64.zip | grep f7930279de8381de7c532164b4a4408895d9606c0d24e2e9d2f9acb5dfe99b3c
        unzip vault_1.13.2_linux_amd64.zip
        mv vault /usr/bin/vault

  kind_configuration_helm3: &kind_configuration_helm3
    pre_script: scripts/circle-pre-e2e.sh
    script: scripts/circle-e2e.sh
    command_runner_image: quay.io/helmpack/chart-testing:v3.8.0
    requires:
      - lint-scripts
      - lint-charts
      - check-helm-docs
    filters:
      branches:
        only: /.*/
      tags:
        ignore: /.*/

executors:
  ci-images:
    docker:
      - image: quay.io/reactiveops/ci-images:v12-buster
  ci-images-large:
    resource_class: large
    docker:
      - image: quay.io/reactiveops/ci-images:v12-buster

jobs:
  check-helm-docs:
    executor: ci-images
    steps:
      - checkout
      - run:
          name: Install helm-docs
          command: |
            cd /tmp
            curl -LO https://github.com/norwoodj/helm-docs/releases/download/v1.11.0/helm-docs_1.11.0_Linux_x86_64.tar.gz
            tar -zxvf helm-docs_1.11.0_Linux_x86_64.tar.gz
            mv helm-docs /usr/local/bin/helm-docs
            chmod +x /usr/local/bin/helm-docs
      - run:
          name: Check Docs for Changes
          command: |
            helm-docs --sort-values-order=file
            git diff --exit-code
      - *check_changelog
  lint-scripts:
    docker:
      - image: koalaman/shellcheck-alpine:v0.7.0
    steps:
      - checkout
      - run:
          name: lint
          command: |
            for script in $(ls scripts/*.sh); do
                shellcheck -x $script
            done
      - run:
          name: lint-pre-scripts
          command: |
            for script in $(find incubator stable -type f -name pre-test-script.sh); do
                shellcheck -x $script
            done
  lint-charts:
    docker:
      - image: quay.io/helmpack/chart-testing:v3.8.0
    steps:
      - checkout
      - *setup_environment
      - run:
          name: lint
          command: |
            git remote add ro https://github.com/fairwindsops/charts
            git fetch ro master
            ct lint --config scripts/ct.yaml --chart-yaml-schema scripts/schema.yaml --debug

  sync:
    docker:
      - image: quay.io/helmpack/chart-testing:v3.8.0
    steps:
      - checkout
      - *setup_environment
      - *install_vault_alpine
      - rok8s/get_vault_aws_credentials:
          vault_path: fairwindsops/sts/charts-docs
      - rok8s/get_vault_env:
          vault_path: repo/charts/env
      - run:
          name: sync
          command: scripts/sync.sh

workflows:
  version: 2
  test-and-sync:
    jobs:
      - check-helm-docs
      - lint-scripts
      - lint-charts
      - rok8s/kubernetes_e2e_tests:
          name: "End-To-End Kubernetes 1.27"
          kind_node_image: "kindest/node:v1.27.16@sha256:2d21a61643eafc439905e18705b8186f3296384750a835ad7a005dceb9546d20"
          script: ls
          #executor:
          #  name: ci-images-large
          #<<: *kind_configuration_helm3
      - rok8s/kubernetes_e2e_tests:
          name: "End-To-End Kubernetes 1.28"
          kind_node_image: "kindest/node:v1.28.15@sha256:a7c05c7ae043a0b8c818f5a06188bc2c4098f6cb59ca7d1856df00375d839251"
          script: ls
          #executor:
          #  name: ci-images-large
          #<<: *kind_configuration_helm3
      - rok8s/kubernetes_e2e_tests:
          name: "End-To-End Kubernetes 1.29"
          kind_node_image: "kindest/node:v1.29.14@sha256:8703bd94ee24e51b778d5556ae310c6c0fa67d761fae6379c8e0bb480e6fea29"
          script: ls
          #executor:
          #  name: ci-images-large
          #<<: *kind_configuration_helm3
      - rok8s/kubernetes_e2e_tests:
          name: "End-To-End Kubernetes 1.30"
          kind_node_image: "kindest/node:v1.30.10@sha256:4de75d0e82481ea846c0ed1de86328d821c1e6a6a91ac37bf804e5313670e507"
          script: ls
          #executor:
          #  name: ci-images-large
          #<<: *kind_configuration_helm3
      - rok8s/kubernetes_e2e_tests:
          name: "End-To-End Kubernetes 1.31"
          kind_node_image: "kindest/node:v1.31.6@sha256:28b7cbb993dfe093c76641a0c95807637213c9109b761f1d422c2400e22b8e87"
          script: ls
          #executor:
          #  name: ci-images-large
          #<<: *kind_configuration_helm3
      - rok8s/kubernetes_e2e_tests:
          name: "End-To-End Kubernetes 1.32"
          kind_node_image: "kindest/node:v1.32.3@sha256:b36e76b4ad37b88539ce5e07425f77b29f73a8eaaebf3f1a8bc9c764401d118c"
          script: ls
         #executor:
          #  name: ci-images-large
          #<<: *kind_configuration_helm3
      - sync:
          requires:
            - lint-scripts
            - lint-charts
            - check-helm-docs
          filters:
            branches:
              only:
                - master
